#version: 2.1
#orbs:
#  aws-ecr: circleci/aws-ecr@0.0.2
#  aws-ecs: circleci/aws-ecs@0.0.8
#workflows:
#  build-and-deploy:
#    jobs:
#      - aws-ecr/build_and_push_image:
#          account-url: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
#          repo: "${AWS_RESOURCE_PREFIX_NAME}"
#          region: "${AWS_DEFAULT_REGION}"
#          tag: "${CIRCLE_SHA1}"
#      - aws-ecs/deploy_and_push_image:
#          requires:
#            - aws-ecr/build_and_push_image
#          aws-region: ${AWS_DEFAULT_REGION}
#          family: "${AWS_RESOURCE_NAME_PREFIX}-service"
#          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
#          container-image-name-updates: "container-${AWS_RESOURCE_NAME_PREFIX}-service,image-and-tag=${AWS_ACCOUT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}"
#          verify-revision-is-deployed: true
#          post-steps:
#            - run:
#                name: test deployment
#                command: |
#                  TARGET_GROUP_ARN=$(aws ecs describe-services --cluster ${AWS_RESOURCE_NAME_PREFIX}-cluster --services ${AWS_RESOURCE_NAME_PREFIX}-service | jq -r '.services[0].loadBalancers[0].targetGroupArn')
#                  ELB_ARN=$(aws elbv2 describe-target-groups --target-group-arns $TARGET_GROUP_ARN | jq -r '.TargetGroups[0].LoadBalancerArns[0]')
#                  ELB_DNS_NAME=$(aws elbv2 describe-load-balancers --load-balancers-arns $ELB_ARN | jq -r '.LoadBalancers[0].DNSName')
#                  curl -s --retry 10 http://$ELB_DNS_NAME | grep "Welcome to nginx!"
#
#



# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.12

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/dynamodb:latest

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/carprks/identity
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -v ./...